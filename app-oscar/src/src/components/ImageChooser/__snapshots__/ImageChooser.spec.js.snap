// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
.c1 label {
  display: block;
  width: 100%;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  font-size: 80%;
  color: #6c7a89;
}

.c1 label[aria-disabled="true"] {
  opacity: 0.5;
}

.c1 input {
  display: block;
  width: 100%;
  padding: 0.5rem 0 0.5rem 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  border: 0;
  border-radius: 0;
  border-bottom: 2px solid #dadfe1;
  background-color: transparent;
  -webkit-letter-spacing: 0;
  -moz-letter-spacing: 0;
  -ms-letter-spacing: 0;
  letter-spacing: 0;
  -webkit-transition: border-color 0.2s ease-in-out;
  transition: border-color 0.2s ease-in-out;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  color: #2e3131;
  -webkit-appearance: none;
}

.c1 input:focus {
  border-color: #bdc3c7;
}

.c1 input::selection {
  background-color: #dadfe1;
}

.c1 input[disabled] {
  opacity: 0.5;
}

.c1 input::-webkit-input-placeholder {
  color: #bdc3c7;
}

input.c1::-moz-placeholder {
  color: #bdc3c7;
}

.c1 input:-moz-placeholder {
  color: #bdc3c7;
}

.c1 input:-ms-input-placeholder {
  color: #bdc3c7;
}

.c2 > img {
  display: block;
  max-width: calc(100% - 1rem);
  max-height: calc(100% - 1rem);
}

.c2 > p {
  width: 100%;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  color: #2e3131;
  opacity: 0.5;
  position: absolute;
  top: 50%;
  text-align: center;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
  cursor: default;
}

.c2 > img {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c0 {
  position: relative;
}

.c0 > .component--heading2 {
  height: 3rem;
  line-height: 3rem;
}

.c0 > .component--input {
  width: 100%;
  margin-bottom: 0.5rem;
}

.c0 > div.outer {
  border: 1px solid #dadfe1;
  border-radius: 4px;
  overflow-y: scroll;
}

.c0 > div.outer > div.inner {
  height: 11rem;
  padding: 1rem 1rem 0 1rem;
}

.c0 > div.outer > div.inner > div {
  position: relative;
  float: left;
  width: 8rem;
  height: 8rem;
  border-radius: 4px;
}

.c0 > div.outer > div.inner > div span {
  display: block;
  position: absolute;
  left: 0;
  top: 8rem;
  text-align: center;
  width: 8rem;
  height: 2rem;
  padding-top: 0.25rem;
  line-height: 0.75rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  font-size: 80%;
  color: #2e3131;
  cursor: default;
}

.c0 > div.outer > div.inner > div + div {
  margin-left: 1rem;
}

.c0 > div.outer > div.inner > div.selected {
  background-color: #dadfe1;
}

@media screen and (min-width:840px) {
  .c0 > .component--input {
    position: absolute;
    top: 0.25rem;
    right: 0;
    width: 12rem;
    margin-bottom: 0;
  }
}

<div
  className="component--image-chooser c0"
>
  <div
    className="component--input c1"
  >
    <input
      disabled={false}
      id="component--input-id"
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="Filter..."
      required={false}
      type="text"
      value=""
    />
  </div>
  <div
    className="outer"
  >
    <div
      className="inner"
      style={
        Object {
          "width": "128px",
        }
      }
    >
      <div
        className="selected"
        onClick={[Function]}
      >
        <div
          className="component--image c2"
        >
          <p>
            No image.
          </p>
        </div>
        <span>
          Xyz
        </span>
      </div>
    </div>
  </div>
</div>
`;
