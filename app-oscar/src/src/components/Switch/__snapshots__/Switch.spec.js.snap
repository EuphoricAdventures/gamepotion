// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders checked 1`] = `
.c0 {
  height: 2rem;
}

.c0 > input {
  display: none;
}

.c0 > label {
  float: left;
  height: 2rem;
}

.c0 > label + label {
  line-height: 2rem;
  margin-left: 0.6666rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  font-size: 80%;
  color: #6c7a89;
}

.c0 > input + label {
  display: block;
  position: relative;
  background-color: #ecf0f1;
  box-shadow: inset 0 0 0px 2px rgb(192,192,192);
  text-indent: -5000px;
  width: calc(2rem + (2rem * (2 / 3)));
  border-radius: 1rem;
}

.c0 > input + label:before {
  content: "";
  position: absolute;
  display: block;
  width: 2rem;
  height: 2rem;
  top: 0;
  left: 0;
  border-radius: 1rem;
  -webkit-transition: .25s ease-in-out;
  transition: .25s ease-in-out;
}

.c0 > input + label:after {
  content: "";
  position: absolute;
  display: block;
  height: 2rem;
  width: 2rem;
  top: 0;
  left: 0;
  border-radius: 1rem;
  background-color: white;
  box-shadow: inset 0 0 0 2px rgb(192,192,192);
  -webkit-transition: .25s ease-in-out;
  transition: .25s ease-in-out;
}

.c0 > input:checked + label:before {
  width: calc(2rem + (2rem * (2 / 3)));
  background-color: #4cd963;
}

.c0 > input:checked + label:after {
  left: calc(2rem * (2 / 3));
  background-color: white;
  box-shadow: inset 0 0 0 2px rgb(192,192,192);
}

<div
  className="component--switch c0"
>
  <input
    checked={true}
    id="id"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    htmlFor="id"
  />
  <label
    className="label"
    htmlFor="id"
  >
    Switch (checked)
  </label>
</div>
`;

exports[`renders unchecked 1`] = `
.c0 {
  height: 2rem;
}

.c0 > input {
  display: none;
}

.c0 > label {
  float: left;
  height: 2rem;
}

.c0 > label + label {
  line-height: 2rem;
  margin-left: 0.6666rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",sans-serif;
  font-weight: 400;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  font-size: 80%;
  color: #6c7a89;
}

.c0 > input + label {
  display: block;
  position: relative;
  background-color: #ecf0f1;
  box-shadow: inset 0 0 0px 2px rgb(192,192,192);
  text-indent: -5000px;
  width: calc(2rem + (2rem * (2 / 3)));
  border-radius: 1rem;
}

.c0 > input + label:before {
  content: "";
  position: absolute;
  display: block;
  width: 2rem;
  height: 2rem;
  top: 0;
  left: 0;
  border-radius: 1rem;
  -webkit-transition: .25s ease-in-out;
  transition: .25s ease-in-out;
}

.c0 > input + label:after {
  content: "";
  position: absolute;
  display: block;
  height: 2rem;
  width: 2rem;
  top: 0;
  left: 0;
  border-radius: 1rem;
  background-color: white;
  box-shadow: inset 0 0 0 2px rgb(192,192,192);
  -webkit-transition: .25s ease-in-out;
  transition: .25s ease-in-out;
}

.c0 > input:checked + label:before {
  width: calc(2rem + (2rem * (2 / 3)));
  background-color: #4cd963;
}

.c0 > input:checked + label:after {
  left: calc(2rem * (2 / 3));
  background-color: white;
  box-shadow: inset 0 0 0 2px rgb(192,192,192);
}

<div
  className="component--switch c0"
>
  <input
    checked={false}
    id="id"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    htmlFor="id"
  />
  <label
    className="label"
    htmlFor="id"
  >
    Switch (unchecked)
  </label>
</div>
`;
